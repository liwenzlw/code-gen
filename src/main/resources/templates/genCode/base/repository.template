package [(${fileMeta.packageName})];

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import com.klxx.ta.common.util.TaAssert;
import com.klxx.ta.[(${config.profile})].mapper.*;

/**
 * [(${tableMateData.tableComment})]
 * @author [(${config.author})]
 * @date [(${currentDate})]
 */
@Repository
public class [(${tableMateData.className})]Repository {

    @Autowired
    private [(${tableMateData.className})]Mapper [(${tableMateData.fieldName})]Mapper;

    /**
     * 只更新非空字段
     * @param [(${tableMateData.fieldName})]
     * @return
     */
    public int updateNotNullByPrimaryKey([(${tableMateData.className})] [(${tableMateData.fieldName})]) {
        TaAssert.notNull([(${tableMateData.fieldName})].getId(),"id");
        return [(${tableMateData.fieldName})]Mapper.updateByPrimaryKeySelective([(${tableMateData.fieldName})]);
    }

    public Optional<[(${tableMateData.className})]> findOne([(${tableMateData.className})] [(${tableMateData.fieldName})]) {
        [(${tableMateData.fieldName})].setStatus(EnumDeleteStatus.NORMAL);
        return Optional.ofNullable([(${tableMateData.fieldName})]Mapper.findOne([(${tableMateData.fieldName})]));
    }

    public [(${tableMateData.className})] findById(Integer id) {
        TaAssert.notNull(id,"id");
        return [(${tableMateData.fieldName})]Mapper.findById(id);
    }

}
