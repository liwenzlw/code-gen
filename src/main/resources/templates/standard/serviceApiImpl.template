package [(${fileMeta.packageName})];

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import [(${config.groupId})].[(${config.artifactId})].common.db.domain.Page;
import [(${config.groupId})].[(${config.artifactId})].api.[(${tableMateData.className})]ServiceApi;
import [(${config.groupId})].[(${config.artifactId})].service.[(${tableMateData.className})]Service;
import [(${config.groupId})].[(${config.artifactId})].domain.[(${tableMateData.className})];

/**
 * [(${tableMateData.tableComment})]
 * @author Generate By [(${config.author})]
 * @date [(${currentDate})]
 */
@Api(tags = "Generate Code")
@RestController
public class [(${tableMateData.className})]ServiceApiImpl implements [(${tableMateData.className})]ServiceApi {

    @Autowired
    private [(${tableMateData.className})]Service [(${tableMateData.fieldName})]Service;

    @ApiOperation(
        value = "desc - author - version",
        notes = "新增",
        tags = "Generate Code"
    )
    @Override
    public [(${tableMateData.className})] add(@RequestBody [(${tableMateData.className})] [(${tableMateData.fieldName})]) {
        return [(${tableMateData.fieldName})]Service.add([(${tableMateData.fieldName})]);
    }

    @ApiOperation(
        value = "desc - author - version",
        notes = "删除",
        tags = "Generate Code"
    )
    @Override
    public void delete(Integer id) {
        [(${tableMateData.fieldName})]Service.delete(id);
    }

    @ApiOperation(
        value = "desc - author - version",
        notes = "修改",
        tags = "Generate Code"
    )
    @Override
    public [(${tableMateData.className})] update(@RequestBody [(${tableMateData.className})] [(${tableMateData.fieldName})]) {
        return [(${tableMateData.fieldName})]Service.update([(${tableMateData.fieldName})]);
    }

    @ApiOperation(
        value = "desc - author - version",
        notes = "通过ID查找",
        tags = "Generate Code"
    )
    @Override
    public [(${tableMateData.className})] findById(Integer id) {
        return [(${tableMateData.fieldName})]Service.findById(id);
    }

    @ApiOperation(
        value = "desc - author - version",
        notes = "通过Domain查找",
        tags = "Generate Code"
    )
    @Override
    public [(${tableMateData.className})] findOne(@RequestBody [(${tableMateData.className})] [(${tableMateData.fieldName})]) {
        return [(${tableMateData.fieldName})]Service.findOne([(${tableMateData.fieldName})]);
    }

    @ApiOperation(
        value = "desc - author - version",
        notes = "分页查找",
        tags = "Generate Code"
    )
    @Override
    public Page<[(${tableMateData.className})]> findPage() {
        return [(${tableMateData.fieldName})]Service.findPage();
    }

    @ApiOperation(
        value = "desc - author - version",
        notes = "列表查找",
        tags = "Generate Code"
    )
    @Override
    public List<[(${tableMateData.className})]> findList(@RequestBody [(${tableMateData.className})] [(${tableMateData.fieldName})]) {
        return [(${tableMateData.fieldName})]Service.findList([(${tableMateData.fieldName})]);
    }
}
